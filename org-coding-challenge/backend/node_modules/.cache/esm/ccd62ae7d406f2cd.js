let express,Organization;_d40‍.x([["default",()=>_d40‍.o]]);_d40‍.w("express",[["default",["express"],function(v){express=v}]]);_d40‍.w("../models/organization.model",[["default",["Organization"],function(v){Organization=v}]]);


const router = express.Router();

//Get all Organizations
router.route('/').get((req, res) =>{
    Organization.find()
    .then(organization => res.json(organization))
    .catch(err => res.status(400).json("Error: " + err));
});

//Add organization
router.route('/createOrg').post((req, res) => {
    const name = req.body.name;
    const address = req.body.address;
    const phone = Number(req.body.phone);

    const newOrganization = new Organization({
        name, address, phone
    });

    newOrganization.save()
    .then(() => res.json("Organization added!"))
    .catch(err => res.status(400).json("Error: " + err));
});

//Get Organization by ID
router.route('/:id').get((req, res) => {
    Organization.findById(req.params.id)
    .then(organization => res.json(organization))
    .catch(err => res.status(400).json("Error: " + err));
});

//Delete Organization
router.route('/:id').delete((req, res) => {
    Organization.findByIdAndDelete(req.params.id)
    .then(() => res.json("Organization Deleted!"))
    .catch(err => res.status(err).json("Error: " + err));
})

//Add user to Organization affiliation list
router.route('/addUser/:id').post((req, res) => {
    Organization.findById(req.params.id)
    .then(organization => {
        var fullName = req.params.firstName + " " + req.params.lastName;
        organization.users.push(fullName);
        organization.save()
        .then(() => res.json(req.params.firstName + " " + req.params.lastName + " added to " + organization.name))
        .catch(err => res.status(400).json("Error: " + err));
    })
    .catch(err => res.status(400).json("Error: " + err));
})

//Update Organization description / Information
router.route('/update/:id').post((req, res) => {
    Organization.findById(req.params.id)
    .then(organization => {
        organization.name = req.body.name;
        organization.address = req.body.address;
        organization.phone = Number(req.body.phone);

    })
    .catch(err => res.status(400).json("Error: " + err));
});

//Delete the user from the organization profile
router.route("/deleteUser/:id").post((req, res) => {
    User.findById(req.params.id)
    .then(user => {
        var removeUser = req.params.firstName + " " + req.params.lastName;
        //If the array doesn't contain the user return
        if(!organization.users.contains(removeUser)){
            return;
        }
        //Remove the user from the organization
        organization.users.splice(organization.users.indexOf(removeUser), 1);
        organization.save()
        .then(() => res.json("User deleted from organization profile!"))
        .catch(err => res.status(400).json("Error: " + err));
    })
    .catch(err => res.status(400).json("Error: " + err));
});

_d40‍.d(router);